<?xml version="1.0"?>

<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml">
    <mx:Script><![CDATA[
        import mx.controls.Label;
        import mx.controls.SWFLoader;
        import mx.events.ColorPickerEvent;

        // We need to explicitly link in the MarshallingSupport [Mixin] class
        // to allow the sub application's PopUpManager to marshall events between communicate with
        // the main application's PopUpManager.
        // NOTE: that this can also be accomplished via the -include mxmlc/compc argument
        // NOTE: MarshallingSupport's behavior was provided by default in Flex 3.x
        //import mx.managers.systemClasses.MarshallingSupport;MarshallingSupport;

        // The **relative** url of the sub-application to load
        private const SUBAPP_URL:String = "TheLoadedFlex3.swf";

        // The SWFLoader user to load "./TheLoaded.swf"
        private var ldr:SWFLoader = new SWFLoader();

        private function loadSubApplication(event:MouseEvent):void {

            // A. add a handler for the COMPLETE event
            ldr.addEventListener(Event.COMPLETE, function(event:Event):void {
                vbox.addChild(event.target as DisplayObject);
            });

            // B. Loading can be instructed to utilize a sibling application domain via the
            // loadForCompatibility flag or or explicitly setting the loader's LoaderContext

            // via loadForCompatibility
            ldr.loadForCompatibility = true;

            // or by specifying a LoaderContext
            // var loaderContext:LoaderContext = new LoaderContext();
            // loaderContext.applicationDomain = new ApplicationDomain();
            // ldr.loaderContext = loaderContext;
            ldr.load(SUBAPP_URL);
        }

        ]]></mx:Script>

    <mx:HBox>
        <mx:Button id="loadSubAppBtn" label="Load It >> " click="loadSubApplication(event)"/>
    </mx:HBox>
    <mx:VBox id="vbox"></mx:VBox>
</mx:Application>