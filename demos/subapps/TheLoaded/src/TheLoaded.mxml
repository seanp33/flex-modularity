<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" borderStyle="solid" preinitialize="preInit(event)">
    <mx:Script><![CDATA[
        import mx.core.FlexGlobals;
        import mx.events.ColorPickerEvent;
        import mx.events.FlexEvent;
        
        import mx.managers.systemClasses.MarshallingSupport;MarshallingSupport;

        /**
         * Event handler for mx.events.FlexEvent.PREINITIALIZE. Attached an event listener for the
         * THE_LOADER_SHARED_EVENT, ultimately dispatched by TheLoader host application
         * NOTE:
         * @param event
         */
        private function preInit(event:FlexEvent):void{
            systemManager.loaderInfo.sharedEvents.addEventListener("THE_LOADER_SHARED_EVENT", function(event:Event):void{
                var lbl:Label = new Label();
                lbl.text = "Recieved a shared event named " + event.type + " from the The Loader";
                vbox.addChild(lbl);
            });
        }
        
        /**
         * Handles the click event of the label by dispatching a bubbling event,
         * intended to be handled by the loading application
         * @param msg
         */
        private function handleLblClick(event:MouseEvent):void {
            // A. dispatches a *bubbling event: bubbling allows the event to transvers the display list
            // and be handled by the loading application
            dispatchEvent(new Event("THE_LOADED_BUBBLING_EVENT", true));
        }

        /**
         * Event handler for color picker which responds by obtaining a reference to the
         * to-level application via mx.core.FlexGlobals and then directly setting its backgroundColor
         * NOTE: This kind of x-scripting is possible because both TheLoader and TheLoaded
         * originated from the same domain. Otherwise, TheLoaded would need to utilize
         * Security.allowDomain(<TheLoader's domain>), or communication would need to
         * occur via the shared event mechanism.
         * @param event
         */
        private function onColorPicked(event:ColorPickerEvent):void{
            FlexGlobals.topLevelApplication.setStyle("backgroundColor", event.color);
            // or the deprecated Application.application.setStyle...
            // or, because we are nested only one level deep, this.parentDocument.
            // All of these references resolve to the TheLoader; the host Application
        }

        /**
         * Event handler for the dispatchSharedEventBtn button. Responds my dispatching
         * the shared event "THE_LOADED_SHARED_EVENT" which is subsequently handled
         * by TheLoader host application
         * @param event
         */
        private function dispatchSharedEvent(event:MouseEvent):void{
            systemManager.loaderInfo.sharedEvents.dispatchEvent(new Event("THE_LOADED_SHARED_EVENT"));
        }

        /**
         * Public function exposed to the loading application
         * @param msg
         */
        public function setLabel(msg:String):void {
            // B. Sets the label's text to demonstrate communication
            lbl.text = msg;
        }

        ]]></mx:Script>
    <mx:Label id="lbl" text="I am the Sub-Application" fontSize="300" click="handleLblClick(event)"/>
    <mx:HBox>
        <mx:Button id="dispatchSharedEventBtn" label="Dispatch a Shared Event to the SubApp >> " click="dispatchSharedEvent(event)"/>
        <mx:Label id="colorPickerLbl" text="Change Color of Loader"></mx:Label>
        <mx:ColorPicker id="colorPicker" change="onColorPicked(event)"></mx:ColorPicker>
    </mx:HBox>
    <mx:VBox id="vbox"></mx:VBox>
</mx:Application>