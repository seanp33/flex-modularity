<?xml version="1.0"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="cc(event);">

    <mx:Script><![CDATA[
        import mx.collections.ArrayCollection;
        import mx.collections.ListCollectionView;
        import mx.controls.SWFLoader;
        import mx.core.UIComponent;
        import mx.events.FlexEvent;

        private static const SUB_APP_URL:String = "http://localhost:8080/modflex/SubApp.swf";
        private var loadQueue:Array = [];

        [Bindable]
        private var alphabet:ArrayCollection = new ArrayCollection();

        private function cc(event:FlexEvent):void {
            loadAlphabet();
        }

        private function loadAlphabet():void {
            for (var i:int = 123; i >= 97; i--) {
                var loader:SWFLoader = new SWFLoader();
                loader.trustContent = true;
                loader.source = SUB_APP_URL;
                loadQueue.push({loader:loader,letter:String.fromCharCode(i)});
                updateListeners(loader.addEventListener);
            }

            loadNext();
        }

        private function loadNext():void {
            if (loadQueue.length) {
                loadQueue[0].loader.load();
            }
        }

        private function updateListeners(op:Function):void {
            op(Event.COMPLETE, handleComplete);
            op(HTTPStatusEvent.HTTP_STATUS, handleHttpStatus);
            op(Event.INIT, handleInit);
            op(IOErrorEvent.IO_ERROR, handleIOErrorEvent);
            op(Event.OPEN, handleOpen);
            op(ProgressEvent.PROGRESS, handleProgress);
            op(SecurityErrorEvent.SECURITY_ERROR, handleSecurityErrorEvent);
        }

        private function handleComplete(event:Event):void {
            var o:Object = loadQueue.pop();
            var loader:SWFLoader = o.loader;
            updateListeners(loader.removeEventListener);
            var letter:String = o.letter;
            var swf:DisplayObject = event.target as DisplayObject;
            addChild(swf);
            loadNext();
        }

        private function handleHttpStatus(event:HTTPStatusEvent):void {
            trace("handleHttpStatus");
        }

        private function handleInit(event:Event):void {
            classLoad(event);
        }

        private function handleIOErrorEvent(event:IOErrorEvent):void {
            trace("handleIOErrorEvent");
        }

        private function handleOpen(event:Event):void {
            trace("handleOpen");
        }

        private function handleProgress(event:ProgressEvent):void {
            trace("handleProgress");
        }

        private function handleSecurityErrorEvent(event:SecurityErrorEvent):void {
            trace("handleSecurityErrorEvent");
        }

        private function classLoad(event:Event):void {
            /*
             var loadedAppDomain:ApplicationDomain = loader.loaderContext.applicationDomain;
             if (loadedAppDomain.hasDefinition("sean.Woobie")) {
             var woobieClass:Class = loadedAppDomain.getDefinition("sean.Woobie") as Class;
             var w:Object = new woobieClass();
             }
             */
        }
        ]]></mx:Script>

    <mx:Tile id="tile"></mx:Tile>

</mx:Application>
